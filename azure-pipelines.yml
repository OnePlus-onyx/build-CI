# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- azure-pipelines


# variables:
#   # DEBUG
#     system.debug: true

jobs:

- job: build

  pool:
    vmImage: 'macOS-10.14'
  timeoutInMinutes: 360


  steps:

  - script: |
        df -h
        more /System/Library/CoreServices/SystemVersion.plist
        sudo xcode-select --switch /Applications/Xcode_10.3.app/Contents/Developer
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        brew install expect  gnu-sed ccache
        ln -s /usr/local/bin/gcc-9 /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-9 /usr/local/bin/g++
        cd /Users/runner
        hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 210g ~/android.dmg
        hdiutil attach /Users/runner/android.dmg.sparseimage -mountpoint /Volumes/android
        df -h
    displayName: ' Initialization environment'


  - script: |
        df -h
        export CCACHE_DIR=~/.ccache
        /usr/local/bin/ccache  -M 70G
        /usr/local/bin/ccache -s
        #export CCACHE_COMPRESS=1
        export USE_CCACHE=1
        git config --global user.name "ittat"
        git config --global user.email "ittat@github.com"
        cd /Volumes/android
        git clone https://github.com/ReB2GOS/B2G -b exp  --depth=1 
        cd ./B2G
        curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo -o repo
        chmod +x repo
        REPO_INIT_FLAGS="--depth=1" REPO_SYNC_FLAGS=" -j128 --force-sync --current-branch --no-tags --no-clone-bundle --optimized-fetch --prune" ./config.sh onyx
        df -h
    displayName: 'Fetch source'

  - script: |
        cd /Volumes/android
        # gecko
        cd ./B2G/gecko
        export LOCAL_NDK_BASE_URL='ftp://ftp.kaiostech.com/ndk/android-ndk'
        touch ./boot.exp
        echo "spawn ./mach bootstrap" >> boot.exp  
        echo "expect  \"Your choice:\" " >> boot.exp
        echo "send \"4\r\" " >> boot.exp
        echo "expect  \"(Yn):\" " >> boot.exp
        echo "send \"Y\r\" " >> boot.exp
        #        echo "expect  \"(Yn):\" " >> boot.exp
        #        echo "send \"Y\r\" " >> boot.exp
        echo "interact " >> boot.exp
        cat ./boot.exp
        expect ./boot.exp
        cd ../../
        #sed -i '' '65i\'$'\n\"10\.15\"\,\n' build/soong/cc/config/x86_darwin_host.go
        #cat ./build/soong/cc/config/x86_darwin_host.go 
        sed -i '' '14d'  system/sepolicy/tests/Android.bp
        cat system/sepolicy/tests/Android.bp
        sudo  mv /usr/local/bin/gsed  /usr/local/bin/sed
        df -h
        #sudo rm -r ./.repo
    displayName: 'fix source'



  - script: |
        df -h
        cd /Volumes/android/B2G
        export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx7G" 
        #export ALLOW_MISSING_DEPENDENCIES=true
        ./build.sh 
        df -h
    displayName: 'build source'




  - script: |
        df -h
        ls -al /Volumes/android/B2G/out/target/product/onyx 
        ls  /Volumes/android/B2G/out/target/product/onyx/system
        /usr/local/bin/ccache -s
        cd ~
        hdiutil detach /Volumes/android
        df -h
    displayName: 'End'

