name: line-emulator-part5-repack-sysroot
on:
#   push:
#     branches: 
#       - master
  repository_dispatch:
    types: 
      - line-emulator-part5-repack-sysroot
env:
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}} 
jobs:
  repack_sysroot:
    runs-on: macos-latest
    timeout-minutes: 360
    steps:
    - name: Checkout
      uses: actions/checkout@v1
     
    - name: Initialization system environment
      run: |
        df -h
        more /System/Library/CoreServices/SystemVersion.plist
        sudo xcode-select --switch /Applications/Xcode_10.3.app/Contents/Developer
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        brew install expect  gnu-sed ccache coreutils
        ln -s /usr/local/bin/gcc-9 /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-9 /usr/local/bin/g++
        #mount
        cd /Users/runner
        hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 420g ~/android.dmg
        hdiutil attach /Users/runner/android.dmg.sparseimage -mountpoint /Volumes/android
        #zstd
        cd  /Volumes/android
        git clone https://github.com/facebook/zstd.git
        cd zstd
        make
        sudo make install 
        #ssh
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        #rclone
        mkdir -p ~/.config/rclone
        git clone git@github.com:ittat/tmp.git
        cd tmp
        mv ./rclone.conf ~/.config/rclone
        brew install rclone
        rclone ls itd:test
        
    - name: Fetch B2G source
      run: |
        df -h
        export CCACHE_DIR=~/.ccache
        /usr/local/bin/ccache  -M 70G
        /usr/local/bin/ccache -s
        export USE_CCACHE=1
        cd /Volumes/android
        rclone copy itd:ci/emulator/B2G.tar.zst ./
        zstd --decompress B2G.tar.zst
        sudo rm -r ./B2G.tar.zst
        tar -xvf ./B2G.tar ./B2G
        sudo rm -r ./B2G.tar
        ls
        df -h
        
    - name: Fetch pre-build-out source
      run: |     
        cd /Volumes/android/B2G
        rclone copy itd:ci/lineage/out3.tar.zst ./
        zstd --decompress out3.tar.zst
        sudo rm -r ./out3.tar.zst
        tar -xvf ./out3.tar ./out
        sudo rm -r ./out3.tar
        ls ./out
        df -h
        
#     - name: fix soucre
#       run: |
#         cd /Volumes/android/
#         git clone https://github.com/lineage-b2g/android_build -b b2g/lineage-17.1 --depth=1
#         sudo rm -rf /Volumes/android/B2G/build/make/tools/releasetools/build_image.py
#         cp  android_build/tools/releasetools/build_image.py  /Volumes/android/B2G/build/make/tools/releasetools
#         ls /Volumes/android/B2G/build/make/tools/releasetools

#     - name: fix soucre
#       run: |
#           # Install tmate on macOS or Ubuntu
#           echo Setting up tmate...
#           if [ -x "$(command -v brew)" ]; then
#             brew install tmate > /tmp/brew.log
#           fi
#           if [ -x "$(command -v apt-get)" ]; then
#             curl -fsSL git.io/tmate.sh | bash
#           fi
#           [ -e ~/.ssh/id_rsa ] || ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""
#           echo Running tmate...
#           tmate -S /tmp/tmate.sock new-session -d
#           tmate -S /tmp/tmate.sock wait tmate-ready
#           # Print connection info
#           DISPLAY=1
#           while [ $DISPLAY -le 3 ]; do
#             echo ________________________________________________________________________________
#             echo To connect to this session copy-n-paste the following into a terminal or browser:
#             tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
#             tmate -S /tmp/tmate.sock display -p '#{tmate_web}'
#             [ ! -f /tmp/keepalive ] && echo -e "After connecting you can run 'touch /tmp/keepalive' to disable the 30m timeout"
#             DISPLAY=$(($DISPLAY+1))
#             sleep 30
#           done
#           if [[ ! -z "$SLACK_WEBHOOK_URL" ]]; then
#             MSG=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
#             curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"\`$MSG\`\"}" $SLACK_WEBHOOK_URL
#           fi
#           # Wait for connection to close or timeout in 15 min
#           timeout=$((30*60))
#           while [ -S /tmp/tmate.sock ]; do
#             sleep 1
#             echo ________________________________________________________________________________
#             echo To connect to this session copy-n-paste the following into a terminal or browser:
#             tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
#             tmate -S /tmp/tmate.sock display -p '#{tmate_web}'
#             timeout=$(($timeout-1))
#             if [ ! -f /tmp/keepalive ]; then
#               if (( timeout < 0 )); then
#                 echo Waiting on tmate connection timed out!
#                 sudo init 0
#                 exit 0
#               fi
#             fi
#           done
             
    - name: build soucre
      run: |
        df -h
        sudo  mv /usr/local/bin/gsed  /usr/local/bin/sed
        cd /Volumes/android/B2G
        export DISABLE_SOURCES_XML=true
        ./build.sh -j4
        df -h
        
    - name: repack sysroot 
      run: |
        git clone https://github.com/OnePlus-onyx/build-CI -b b2g
        cd build-CI
        cp ./package_emulator_sysroot.sh ~/
        chmod +x ~/package_emulator_sysroot.sh
        df -h
        cd /Volumes/android/B2G
        cp ~/package_emulator_sysroot.sh ./
        pip3 install zstandard
        pip install zstandard
        #mv ./gecko-b2g ./gecko
        ./package_emulator_sysroot.sh
        ls -al -h b2g-sysroot.tar.zst
        ls
        df -h
        
    - name: update 
      run: |
        df -h
        cd /Volumes/android/B2G
        #~/.google-drive-upload/bin/gupload -o ./b2g-sysroot.tar.zst
        rclone copy ./b2g-sysroot.tar.zst itd:ci/lineage 
        df -h
    - name: Send Notify
      run: |
        today=$(date +%Y-%m-%d)
        curl -X POST "https://api.telegram.org/bot${{secrets.TG_BOT_TOKEN}}/sendMessage" -d "chat_id=${{secrets.TG_GROUP_KAIOS}}&text=${today}.BuildType.${{github.event.action}} PASS!"
     
#     - name: send webhook          
#       run: |
#         cd /Volumes/android/
#         curl -H "Authorization: token ${{secrets.GIT_ACCESS_TOKEN}}"   --request POST   --data '{"event_type": "b2g-emulator-part6-build-gecko"}'   https://api.github.com/repos/OnePlus-onyx/build-CI/dispatches
        
