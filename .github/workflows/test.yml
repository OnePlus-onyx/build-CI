name: test
on: 
  repository_dispatch:
      types: 
      - test
env:
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}} 
  B2G: ${{ github.event.client_payload.b2g }}    
  outversion: ${{ github.event.client_payload.outversion }}    

jobs:
  emulator_build:
    runs-on: macos-latest
    timeout-minutes: 360
    steps:

    - name: Send Start Notify
      run: |
        today=$(date +%Y-%m-%d)
        curl -X POST "https://api.telegram.org/bot${{secrets.TG_BOT_TOKEN}}/sendMessage" -d "chat_id=${{secrets.TG_GROUP_KAIOS}}&text=${today}.BuildType.${{github.event.action}}.${B2G}.${outversion} Start!"
     
    - name: Checkout
      uses: actions/checkout@v1    
        
    - name: Initialization system environment
      run: |
        df -h
        more /System/Library/CoreServices/SystemVersion.plist
        sudo xcode-select --switch /Applications/Xcode_10.3.app/Contents/Developer
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        brew install expect  gnu-sed ccache coreutils
        ln -s /usr/local/bin/gcc-9 /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-9 /usr/local/bin/g++
        #mount
        cd /Users/runner
        hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 400g ~/android.dmg
        hdiutil attach /Users/runner/android.dmg.sparseimage -mountpoint /Volumes/android
        #zstd
        cd  /Volumes/android
        git clone https://github.com/facebook/zstd.git
        cd zstd
        make
        sudo make install 
        #ssh
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        #rclone
        mkdir -p ~/.config/rclone
        git clone git@github.com:ittat/tmp.git
        cd tmp
        mv ./rclone.conf ~/.config/rclone
        brew install rclone
        rclone ls itd:test
        
    - name: Fetch B2G source
      run: |
        df -h
        cd /Volumes/android
        rclone copy itd:ci/emulator/${B2G}.tar.zst ./
        zstd --decompress ${B2G}.tar.zst
        tar -xvf ./${B2G}.tar ./B2G
        sudo rm -r ./${B2G}.tar.zst
        sudo rm -r ./${B2G}.tar
        ls
        df -h

    - name: Fetch pre-out source
      if: github.event.client_payload.outversion != 1
      run: |
        cd /Volumes/android/B2G
        preoutversion=`expr ${outversion} - 1`
        rclone copy itd:ci/test/out${preoutversion}.tar.zst ./
        zstd --decompress out${preoutversion}.tar.zst
        sudo rm -r ./out${preoutversion}.tar.zst
        tar -xvf ./out${preoutversion}.tar ./out
        sudo rm -r ./out${preoutversion}.tar
        ls ./out
        df -h
        
    - name: build soucre
      continue-on-error: true
      id: build
      run: |
        df -h
        export CCACHE_DIR=~/.ccache
        /usr/local/bin/ccache  -M 70G
        /usr/local/bin/ccache -s
        export USE_CCACHE=1
        sudo  mv /usr/local/bin/gsed  /usr/local/bin/sed
        cd /Volumes/android/B2G
        export DISABLE_SOURCES_XML=true
        gtimeout 275m ./build.sh -j4
        df -h
        
    - name: check build exit code
      if: steps.name.build.exitcode != 124 && steps.name.build.exitcode != 0
      run: |
        echo Error!
        today=$(date +%Y-%m-%d)
        curl -X POST "https://api.telegram.org/bot${{secrets.TG_BOT_TOKEN}}/sendMessage" -d "chat_id=${{secrets.TG_GROUP_KAIOS}}&text=${today}.BuildType.${{github.event.action}}.${B2G}.${out}.error.${{steps.name.build.exitcode}} Error!"
        exit 2


    - name: remove source exclude out file
      if: steps.name.build.exitcode == 124 || steps.name.build.exitcode == 0
      run: |
         cd /Volumes/android/B2G
         sudo rm -rf  `ls | grep -v "out" `
         df -h
         
    - name: repack out 
      if: steps.name.build.exitcode == 124 || steps.name.build.exitcode == 0
      run: |
        cd /Volumes/android/B2G
        tar -cvf ./out${outversion}.tar ./out
        zstd ./out${outversion}.tar
        sudo rm ./out${outversion}.tar
        sudo rm -r ./out
        df -h
        
    - name: update 
      if: steps.name.build.exitcode == 124 || steps.name.build.exitcode == 0
      run: |
        cd /Volumes/android/B2G
        rclone copy ./out${outversion}.tar.zst itd:ci/test 
            
    - name: send test
      if: steps.name.build.exitcode == 124           
      run: |
        cd /Volumes/android/
        nextoutversion=`expr ${outversion} + 1`
        curl -H "Authorization: token ${{secrets.GIT_ACCESS_TOKEN}}"   --request POST   --data '{"event_type": "test", "client_payload": {"b2g": "B2G", "out":"${nextoutversion}"}}'   https://api.github.com/repos/OnePlus-onyx/build-CI/dispatches

    - name: Send Done Notify & send b2g-sys
      if: steps.name.build.exitcode == 0
      run: |
       curl -X POST "https://api.telegram.org/bot${{secrets.TG_BOT_TOKEN}}/sendMessage" -d "chat_id=${{secrets.TG_GROUP_KAIOS}}&text=${today}.BuildType.${{github.event.action}}.${B2G}.${out}.exitcode.${{steps.name.build.exitcode}} Done!"
#      curl -H "Authorization: token ${{secrets.GIT_ACCESS_TOKEN}}"   --request POST   --data '{"event_type": "test", "client_payload": {"b2g": "B2G", "out":"${nextoutversion}"}}'   https://api.github.com/repos/OnePlus-onyx/build-CI/dispatches
      
