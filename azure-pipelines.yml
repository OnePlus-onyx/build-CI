# build b2g_x86_64 
# using prebuild aosp_emulator

#trigger:
#- azure-pipelines

jobs:

- job: build

  pool:
    vmImage: 'ubuntu-latest'
  timeoutInMinutes: 360


  steps:

  - script: |
        df -h
        sudo apt install git make
        git config --global user.name "ittat"
        git config --global user.email "ittat@github.com"
    displayName: ' Initialization environment'


  - script: |
        df -h
        cd ~
        wget https://firefoxci.taskcluster-artifacts.net/SqAWos4HSqSIZjNnf_yRxQ/0/public/build/b2g-sysroot.tar.zst
        tar -C "$HOME/.mozbuild" -x -a -f b2g-sysroot.tar.zst
        sudo rm b2g-sysroot.tar.zst
        ls
        cd ~
        git clone https://github.com/kaiostech/gecko-b2g -b gonk --depth=1
        cd  gecko-b2g
        export LOCAL_NDK_BASE_URL='ftp://ftp.kaiostech.com/ndk/android-ndk' ./mach bootstrap --no-interactive  --application-choice mobile 
        df -h
    displayName: 'Fetch source'



  # - script: |
  #     # Install tmate on macOS or Ubuntu
  #     echo Setting up tmate...
  #     if [ -x "$(command -v brew)" ]; then
  #       brew install tmate > /tmp/brew.log
  #     fi
  #     if [ -x "$(command -v apt-get)" ]; then
  #       curl -fsSL git.io/tmate.sh | bash
  #     fi
  #     [ -e ~/.ssh/id_rsa ] || ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""
  #     echo Running tmate...
  #     tmate -S /tmp/tmate.sock new-session -d
  #     tmate -S /tmp/tmate.sock wait tmate-ready
  #     # Print connection info
  #     DISPLAY=1
  #     while [ $DISPLAY -le 3 ]; do
  #       echo ________________________________________________________________________________
  #       echo To connect to this session copy-n-paste the following into a terminal or browser:
  #       tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
  #       tmate -S /tmp/tmate.sock display -p '#{tmate_web}'
  #       [ ! -f /tmp/keepalive ] && echo -e "After connecting you can run 'touch /tmp/keepalive' to disable the 30m timeout"
  #       DISPLAY=$(($DISPLAY+1))
  #       sleep 30
  #     done
  #     if [[ ! -z "$SLACK_WEBHOOK_URL" ]]; then
  #       MSG=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
  #       curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"\`$MSG\`\"}" $SLACK_WEBHOOK_URL
  #     fi
  #     # Wait for connection to close or timeout in 15 min
  #     timeout=$((30*60))
  #     while [ -S /tmp/tmate.sock ]; do
  #       sleep 1
  #       timeout=$(($timeout-1))
  #       if [ ! -f /tmp/keepalive ]; then
  #         if (( timeout < 0 )); then
  #           echo Waiting on tmate connection timed out!
  #           sudo init 0
  #           exit 0
  #         fi
  #       fi
  #     done
  #   displayName:  tmate

  - script: |
          cd ~/gecko-b2g
          cat>mozconfig<<EOF 
            ac_add_options --enable-application=b2g
            ac_add_options --with-android-version=29
            ac_add_options --target=x86_64-linux-android
            ac_add_options --with-target-arch-name=x86_64
          EOF
          cd ~/gecko-b2g
          ls
          cat ./mozconfig
    displayName: 'fix source'



  - script: |
        df -h
        cd ~/gecko-b2g
        ./mach build
        df -h
    displayName: 'build source'


  - script: |
        df -h
        df -h
    displayName: 'End'

