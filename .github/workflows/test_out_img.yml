name: test_out_img
on: 
  repository_dispatch:
      types: 
      - test_out_img
env:
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}} 
  B2G: ${{ github.event.client_payload.b2g }}    
  outversion: ${{ github.event.client_payload.outversion }}    

jobs:
  emulator_build:
    runs-on: macos-latest
    timeout-minutes: 360
    steps:

    - name: Send Start Notify
      run: |
        today=$(date +%Y-%m-%d)
        curl -X POST "https://api.telegram.org/bot${{secrets.TG_BOT_TOKEN}}/sendMessage" -d "chat_id=${{secrets.TG_GROUP_KAIOS}}&text=${today}.BuildType.${{github.event.action}}.${B2G}.${outversion} Start!"
     
    - name: Checkout
      uses: actions/checkout@v1    
        
    - name: Initialization system environment
      run: |
        df -h
        more /System/Library/CoreServices/SystemVersion.plist
        sudo xcode-select --switch /Applications/Xcode_10.3.app/Contents/Developer
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        brew install expect  gnu-sed ccache coreutils
        ln -s /usr/local/bin/gcc-9 /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-9 /usr/local/bin/g++
        #mount
        cd /Users/runner
        hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 350g ~/android.dmg
        hdiutil attach /Users/runner/android.dmg.sparseimage -mountpoint /Volumes/android
        #zstd
        cd  /Volumes/android
        git clone https://github.com/facebook/zstd.git
        cd zstd
        make
        sudo make install 
        #ssh
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        #rclone
        mkdir -p ~/.config/rclone
        git clone git@github.com:ittat/tmp.git
        cd tmp
        mv ./rclone.conf ~/.config/rclone
        brew install rclone
        rclone ls itd:test
        
    - name: Fetch B2G source
      run: |
        df -h
        cd /Volumes/android
        rclone copy itd:ci/emulator/${B2G}.tar.zst ./
        zstd --decompress ${B2G}.tar.zst
        tar -xvf ./${B2G}.tar ./B2G
        sudo rm -r ./${B2G}.tar.zst
        sudo rm -r ./${B2G}.tar
        ls
        df -h
        
    - name: Fetch pre-out source
      run: |
        cd /Volumes/android/B2G
        rclone copy itd:ci/test/out${outversion}.tar.zst ./
        zstd --decompress out${outversion}.tar.zst
        sudo rm -r ./out${outversion}.tar.zst
        tar -xvf ./out${outversion}.tar ./out
        sudo rm -r ./out${outversion}.tar
        ls ./out
        df -h

    - name: Fetch pre-gecko source
      run: |
        cd /Volumes/android/B2G
        mkdir pre-gecko
        cd pre-gecko
        rclone copy itd:ci/onyx/b2g-82.0a1.en-US.linux-androideabi-arm.tar.gz ./

    - name: Fix source
      run: |
        cd /Volumes/android/
        git clone https://github.com/kaiostech/gonk-misc -b main --depth=1
        sudo rm B2G/gonk-misc/Android.mk
        cp gonk-misc/Android.mk  B2G/gonk-misc/
        
    - name: build soucre
      run: |
        df -h
        export CCACHE_DIR=~/.ccache
        /usr/local/bin/ccache  -M 70G
        /usr/local/bin/ccache -s
        export USE_CCACHE=1
        sudo  mv /usr/local/bin/gsed  /usr/local/bin/sed
        cd /Volumes/android/B2G
        export DISABLE_SOURCES_XML=true
        export USE_PREBUILT_B2G=1
        export PREFERRED_B2G="/Volumes/android/B2G/pre-gecko/b2g-82.0a1.en-US.linux-androideabi-arm.tar.gz"
        ./build.sh -j4
        df -h
        
    - name: send
      run: |
        curl -X POST "https://api.telegram.org/bot${{secrets.TG_BOT_TOKEN}}/sendMessage" -d "chat_id=${{secrets.TG_GROUP_KAIOS}}&text=${today}.BuildType.${{github.event.action}} Done!"

