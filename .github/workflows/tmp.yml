name: onyx_build
on: 
  repository_dispatch:
      types: 
      - tmp
      
env:
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}} 
  outversion: ${{ github.event.client_payload.outversion }}  
  action_type: ${{ github.event.action }} 

jobs: 
  Download:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
    - name: Checkout
      uses: actions/checkout@v1
        
    - name: Initialization system environment
      run: |
        df -h   
        #####ssh
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        #####rclone
        mkdir -p ~/.config/rclone
        git clone git@github.com:ittat/tmp.git
        cd tmp
        mv ./rclone.conf ~/.config/rclone
        brew install rclone
        rclone ls itd:test
        
        cd ~ 
        sudo apt install aria2

    - name: sdfsd 
      run: |
        # Install tmate on macOS or Ubuntu
        echo Setting up tmate...
        if [ -x "$(command -v brew)" ]; then
          brew install tmate > /tmp/brew.log
        fi
        if [ -x "$(command -v apt-get)" ]; then
          curl -fsSL git.io/tmate.sh | bash
        fi
        [ -e ~/.ssh/id_rsa ] || ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""
        echo Running tmate...
        tmate -S /tmp/tmate.sock new-session -d
        tmate -S /tmp/tmate.sock wait tmate-ready
        # Print connection info
        DISPLAY=1
        while [ $DISPLAY -le 3 ]; do
          echo ________________________________________________________________________________
          echo To connect to this session copy-n-paste the following into a terminal or browser:
          tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
          tmate -S /tmp/tmate.sock display -p '#{tmate_web}'
          [ ! -f /tmp/keepalive ] && echo -e "After connecting you can run 'touch /tmp/keepalive' to disable the 30m timeout"
          DISPLAY=$(($DISPLAY+1))
          sleep 30
        done
        if [[ ! -z "$SLACK_WEBHOOK_URL" ]]; then
          MSG=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"\`$MSG\`\"}" $SLACK_WEBHOOK_URL
        fi
        # Wait for connection to close or timeout in 15 min
        timeout=$((30*60))
        while [ -S /tmp/tmate.sock ]; do
          sleep 1
          echo ________________________________________________________________________________
          echo To connect to this session copy-n-paste the following into a terminal or browser:
          tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
          tmate -S /tmp/tmate.sock display -p '#{tmate_web}'
          [ ! -f /tmp/keepalive ] && echo -e "After connecting you can run 'touch /tmp/keepalive' to disable the 30m timeout"
          timeout=$(($timeout-1))
          if [ ! -f /tmp/keepalive ]; then
            if (( timeout < 0 )); then
              echo Waiting on tmate connection timed out!
              sudo init 0
              exit 0
            fi
          fi
        done
           
           

#     - name: Fetch B2G source
#       continue-on-error: true
#       run: |
#         df -h
#         cd ~ 
#         ls -al
#         cd /Volumes/android/B2G
#         ls -al
#         cd ~
#         hdiutil detach /Volumes/android
#         sudo rm -rf android.dmg.sparseimage

#     - name: Fetch B2G source
#       run: |
#         df -h
#         git config --global user.name "ittat"
#         git config --global user.email "ittat@github.com"
#         cd ~
#         ls -al
#         rclone copy itd:ci/new/android.dmg.sparseimage.zst ./
#         ls -al
#         zstd --decompress  android.dmg.sparseimage.zst
#         ls -al
#         sudo rm -rf ./android.dmg.sparseimage.zst
#         #####mount
#         hdiutil attach /Users/runner/android.dmg.sparseimage -mountpoint /Volumes/android
#         df -h
#     - name: fix soucre
#       run: |
#         df -h
#         cd ~
#         git clone https://github.com/OnePlus-onyx/build-CI -b b2g
#         cd /Volumes/android/
#         cp B2G/gonk-misc/Android.mk ./
#         cd /Volumes/android/B2G/gonk-misc
#         git am ~/build-CI/0001-err.patch
#         cd ../
#         # Force compressing debug symbols
#         cd build/soong
#         git am ~/build-CI/0001-gz.patch
             
#         df -h
#         cd /Volumes/android/B2G
#         sudo rm -rf .repo
#         df -h
# #     - name: fix soucre
# #       run: |
# #         ####
# #         cd /Volumes/android/B2G
# #         sed -i '' '14d'  system/sepolicy/tests/Android.bp
        
# #         ####
# #         echo apply patch
# #         sudo rm -rf ./patcher
# #         git clone https://github.com/OnePlus-onyx/patcher -b test
# #         ./patcher/patcher.sh 
        
# #         ####     
# #         #df -h
# #         #sudo rm -rf .repo
# #         #df -h
        
# #         ####
# #         cd /Volumes/android/B2G/system
# #         sudo rm -rf ./core
# #         git clone https://github.com/ReB2GOS/system_core -b gonk-onyx
# #         mv system_core core
        
# #         ####
# #         cd /Volumes/android/B2G/external
# #         sudo rm -rf ./selinux
# #         git clone https://github.com/ReB2GOS/external_selinux -b aosp-10.0
# #         mv external_selinux selinux
# #         cd selinux 
# #         git branch test1 c4d3d93c335fbcd34b589b008ee27e5a2a590a43
# #         git checkout test1
        
#     - name: repack soucre
#       run: |
#         hdiutil detach /Volumes/android
#         cd ~
#         zstd android.dmg.sparseimage
#         ls -al android.dmg.sparseimage*
        
#     - name: update 
#       run: |
#         df -h
#         cd ~
#         #mv ./B2G.tar.zst ./B2G.tar.zst
#         rclone copy ./android.dmg.sparseimage.zst itd:ci/new
#         df -h
#         sudo rm -f sudo rm -rf android.dmg.sparseimage
        
# #     - name: send webhook          
# #       run: |
# #         cd /Volumes/android/
# #         curl -H "Authorization: token ${{secrets.GIT_ACCESS_TOKEN}}"   --request POST   --data '{"event_type": "b2g-onyx-part2-build1"}'   https://api.github.com/repos/OnePlus-onyx/build-CI/dispatches
   

