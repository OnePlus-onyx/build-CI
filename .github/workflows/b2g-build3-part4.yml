name: b2g-emulator-build3
on:
  repository_dispatch:
    types: 
      - b2g-build3-part4
env:
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}} 

jobs:
  build1:
    runs-on: macos-latest
    timeout-minutes: 720
    steps:
    - name: Checkout
      uses: actions/checkout@v1
 
    - name: Initialization system environment
      run: |
        df -h
        more /System/Library/CoreServices/SystemVersion.plist
        sudo xcode-select --switch /Applications/Xcode_10.3.app/Contents/Developer
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        brew install  gnu-sed ccache
        ln -s /usr/local/bin/gcc-9 /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-9 /usr/local/bin/g++
        #mount
        cd /Users/runner
        hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 350g ~/android.dmg
        hdiutil attach /Users/runner/android.dmg.sparseimage -mountpoint /Volumes/android
        #zstd
        cd  /Volumes/android
        git clone https://github.com/facebook/zstd.git
        cd zstd
        make
        sudo make install 
        #gupload
        curl --compressed -s https://raw.githubusercontent.com/labbots/google-drive-upload/master/install.sh | sh -s
        touch ~/.googledrive.conf
        echo ${{secrets.GUP_CLIENT_ID}} >> ~/.googledrive.conf
        echo ${{secrets.GUP_CLIENT_SECRET}} >> ~/.googledrive.conf
        echo ${{secrets.GUP_ACCESS_TOKEN}} >> ~/.googledrive.conf
        echo ${{secrets.GUP_ACCESS_TOKEN_EXPIRY}} >> ~/.googledrive.conf
        echo ${{secrets.GUP_REFRESH_TOKEN}} >> ~/.googledrive.conf
        echo ${{secrets.GUP_ROOT_FOLDER}} >> ~/.googledrive.conf 
        #ssh
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        #rclone
        mkdir -p ~/.config/rclone
        git clone git@github.com:ittat/tmp.git
        cd tmp
        mv ./rclone.conf ~/.config/rclone
        brew install rclone
        rclone ls itd:test
        
    - name: Fetch source
      run: |
        df -h  
        export CCACHE_DIR=~/.ccache
        /usr/local/bin/ccache  -M 20G
        /usr/local/bin/ccache -s
        export USE_CCACHE=1
        cd /Volumes/android
        rclone copy itd:B2G.tar.zst ./
        zstd --decompress B2G.tar.zst
        sudo rm -r ./B2G.tar.zst
        tar -xvf ./B2G.tar ./B2G
        sudo rm -r ./B2G.tar
        
    - name: Fetch source
      run: |
        cd /Volumes/android/B2G
        rclone copy itd:out2.tar.zst ./
        zstd --decompress out2.tar.zst
        sudo rm -r ./out2.tar.zst
        tar -xvf ./out2.tar ./out
        sudo rm -r ./out2.tar
        ls ./out
        df -h
        
    - name: build soucre
      run: |
        df -h
        sudo  mv /usr/local/bin/gsed  /usr/local/bin/sed
        cd /Volumes/android/B2G
        export DISABLE_SOURCES_XML=true
        ./build.sh -j4
        df -h
        
    - name: remove source exclude out filer 
      run: |
         cd /Volumes/android/B2G
         sudo rm -rf  `ls | grep -v "out" `
         ls
         cd ../
         sudo rm -rf  `ls | grep -v "B2G" `
         ls
         df -h
         
    - name: repack out
      run: |    
         cd /Volumes/android/B2G
         tar -cvf ./out3.tar ./out
         sudo rm -rf ./out
         ls -al -h
         df -h
         
    - name: zstd out
      run: |
         cd /Volumes/android/B2G
         ls -al -h
         df -h
         zstd ./out3.tar
         sudo rm ./out3.tar
         ls -al -h
         df -h
                
    - name:  update out      
      run: |
         df -h
         cd /Volumes/android/B2G
         ~/.google-drive-upload/bin/gupload -o ./out3.tar.zst
         df -h

    - name: send webhook          
      run: |
        cd /Volumes/android/
        curl -H "Authorization: token ${{secrets.GIT_ACCESS_TOKEN}}"   --request POST   --data '{"event_type": "b2g-repack-sysroot-part5"}'   https://api.github.com/repos/OnePlus-onyx/build-CI/dispatches
        
