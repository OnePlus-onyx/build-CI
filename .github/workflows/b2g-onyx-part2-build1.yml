name: b2g-onyx-part2-build1
on:
  repository_dispatch:
    types: 
      - b2g-onyx-part2-build1
env:
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}         

jobs:
  emulator_build1:
    runs-on: macos-latest
    timeout-minutes: 360
    steps:
    - name: Checkout
      uses: actions/checkout@v1

        
    - name: Initialization system environment
      run: |
        df -h
        more /System/Library/CoreServices/SystemVersion.plist
        sudo xcode-select --switch /Applications/Xcode_10.3.app/Contents/Developer
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        brew install expect  gnu-sed ccache coreutils
        ln -s /usr/local/bin/gcc-9 /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-9 /usr/local/bin/g++
        #mount
        cd /Users/runner
        hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 210g ~/android.dmg
        hdiutil attach /Users/runner/android.dmg.sparseimage -mountpoint /Volumes/android
        #zstd
        cd  /Volumes/android
        git clone https://github.com/facebook/zstd.git
        cd zstd
        make
        sudo make install 
        #ssh
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        #rclone
        mkdir -p ~/.config/rclone
        git clone git@github.com:ittat/tmp.git
        cd tmp
        mv ./rclone.conf ~/.config/rclone
        brew install rclone
        rclone ls itd:test
        
    - name: Fetch source
      run: |
        df -h
        export CCACHE_DIR=~/.ccache
        /usr/local/bin/ccache  -M 70G
        /usr/local/bin/ccache -s
        export USE_CCACHE=1
        cd /Volumes/android
        rclone copy itd:ci/onyx/B2G.tar.zst ./
        zstd --decompress B2G.tar.zst
        tar -xvf ./B2G.tar ./B2G
        sudo rm -r ./B2G.tar.zst
        sudo rm -r ./B2G.tar
        ls
        df -h


    - name: test
      run: |
          # Install tmate on macOS or Ubuntu
          echo Setting up tmate...
          if [ -x "$(command -v brew)" ]; then
            brew install tmate > /tmp/brew.log
          fi
          if [ -x "$(command -v apt-get)" ]; then
            curl -fsSL git.io/tmate.sh | bash
          fi
          [ -e ~/.ssh/id_rsa ] || ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""
          echo Running tmate...
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          # Print connection info
          DISPLAY=1
          while [ $DISPLAY -le 120 ]; do
            echo ________________________________________________________________________________
            echo To connect to this session copy-n-paste the following into a terminal or browser:
            tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
            tmate -S /tmp/tmate.sock display -p '#{tmate_web}'
            [ ! -f /tmp/keepalive ] && echo -e "After connecting you can run 'touch /tmp/keepalive' to disable the 30m timeout"
            DISPLAY=$(($DISPLAY+1))
            sleep 20
          done
          if [[ ! -z "$SLACK_WEBHOOK_URL" ]]; then
            MSG=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
            curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"\`$MSG\`\"}" $SLACK_WEBHOOK_URL
          fi
          # Wait for connection to close or timeout in 15 min
          timeout=$((30*60))
          while [ -S /tmp/tmate.sock ]; do
            sleep 1
            timeout=$(($timeout-1))
            if [ ! -f /tmp/keepalive ]; then
              if (( timeout < 0 )); then
                echo Waiting on tmate connection timed out!
                sudo init 0
                exit 0
              fi
            fi
          done

    - name: apply patch
      run: |
        cd /Volumes/android/B2G
        ls
        sudo rm -rf ./patcher
        git clone https://github.com/OnePlus-onyx/patcher -b test-ci
        ./patcher/patcher.sh
        
        
    - name: build soucre
      continue-on-error: true
      run: |
        df -h
        sudo  mv /usr/local/bin/gsed  /usr/local/bin/sed
        cd /Volumes/android/B2G
        export DISABLE_SOURCES_XML=true
        gtimeout 275m ./build.sh -j4
        df -h
        
    - name: repack update 
      run: |
        cd /Volumes/android/B2G
        tar -cvf ./out.tar ./out
        zstd ./out.tar
        sudo rm ./out.tar
        sudo rm -r ./out
        df -h
        
    - name: update 
      run: |
        cd /Volumes/android/B2G
        #~/.google-drive-upload/bin/gupload -o ./out.tar.zst
        rclone copy ./out.tar.zst itd:ci/onyx 
        
#     - name: send webhook          
#       run: |
#         cd /Volumes/android/
#         curl -H "Authorization: token ${{secrets.GIT_ACCESS_TOKEN}}"   --request POST   --data '{"event_type": "b2g-emulator-part3-build2"}'   https://api.github.com/repos/OnePlus-onyx/build-CI/dispatches
       
