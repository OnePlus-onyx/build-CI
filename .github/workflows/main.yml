name: example-client-payload-action
on: 
  repository_dispatch:
      types: 
      - test


env:
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}} 
  B2G: ${{ github.event.client_payload.b2g }}    
  out: ${{ github.event.client_payload.out }}    

jobs:
  emulator_build1:
    runs-on: macos-latest
    timeout-minutes: 360
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      
    - name: build
      run: |
        echo  ${{ github.event.client_payload.b2g }}
        echo  `expr ${out} + 1`
        
        
#     - name: Initialization system environment
#       run: |
#         df -h
#         more /System/Library/CoreServices/SystemVersion.plist
#         sudo xcode-select --switch /Applications/Xcode_10.3.app/Contents/Developer
#         /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
#         brew install expect  gnu-sed ccache coreutils
#         ln -s /usr/local/bin/gcc-9 /usr/local/bin/gcc
#         ln -s /usr/local/bin/g++-9 /usr/local/bin/g++
#         #mount
#         cd /Users/runner
#         hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 210g ~/android.dmg
#         hdiutil attach /Users/runner/android.dmg.sparseimage -mountpoint /Volumes/android
#         #zstd
#         cd  /Volumes/android
#         git clone https://github.com/facebook/zstd.git
#         cd zstd
#         make
#         sudo make install 
#         #ssh
#         mkdir -p ~/.ssh
#         echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
#         chmod 600 ~/.ssh/id_rsa
#         #rclone
#         mkdir -p ~/.config/rclone
#         git clone git@github.com:ittat/tmp.git
#         cd tmp
#         mv ./rclone.conf ~/.config/rclone
#         brew install rclone
#         rclone ls itd:test
        
#     - name: Fetch source
#       run: |
#         df -h
#         export CCACHE_DIR=~/.ccache
#         /usr/local/bin/ccache  -M 70G
#         /usr/local/bin/ccache -s
#         export USE_CCACHE=1
#         cd /Volumes/android
#         rclone copy itd:ci/emulator/B2G.tar.zst ./
#         zstd --decompress B2G.tar.zst
#         tar -xvf ./B2G.tar ./B2G
#         sudo rm -r ./B2G.tar.zst
#         sudo rm -r ./B2G.tar
#         ls
#         df -h
        
#     - name: build soucre
#       continue-on-error: true
#       run: |
#         df -h
#         sudo  mv /usr/local/bin/gsed  /usr/local/bin/sed
#         cd /Volumes/android/B2G
#         export DISABLE_SOURCES_XML=true
#         gtimeout 275m ./build.sh -j4
#         df -h
        
#     - name: repack update 
#       run: |
#         cd /Volumes/android/B2G
#         tar -cvf ./out.tar ./out
#         zstd ./out.tar
#         sudo rm ./out.tar
#         sudo rm -r ./out
#         df -h
        
#     - name: update 
#       run: |
#         cd /Volumes/android/B2G
#         #~/.google-drive-upload/bin/gupload -o ./out.tar.zst
#         rclone copy ./out.tar.zst itd:ci/emulator 
        
#     - name: send webhook          
#       run: |
#         cd /Volumes/android/
#         curl -H "Authorization: token ${{secrets.GIT_ACCESS_TOKEN}}"   --request POST   --data '{"event_type": "test", "client_payload": {"b2g": "B2G", "out":"1"}}'   https://api.github.com/repos/OnePlus-onyx/build-CI/dispatches
        
